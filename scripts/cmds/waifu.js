const axios = require('axios');

module.exports = {
	config: {
		name: "waifu",
		aliases: ["waifu", "neko"],
		version: "2.0",
		author: "NISAN + ChatGPT",
		countDown: 5,
		role: 0,
		shortDescription: "Anime action with tag support",
		longDescription: "Send anime-style actions with optional user mention",
		category: "anime",
		guide: "{pn} <category> [@mention]"
	},

	onStart: async function ({ message, args, event, usersData }) {
		const { mentions, senderID } = event;
		const mentionIDs = Object.keys(mentions);
		const category = args[0]?.toLowerCase();
		const senderName = (await usersData.get(senderID))?.name || "Someone";
		const targetTag = mentionIDs.length > 0 ? mentions[mentionIDs[0]] : null;
		const targetID = mentionIDs.length > 0 ? mentionIDs[0] : null;

		// тЬЕ ржбрж┐ржлрж▓рзНржЯ: ржХрж┐ржЫрзБ ржирж╛ ржжрж┐рж▓рзЗ random waifu
		if (!category) {
			try {
				const res = await axios.get(`https://api.waifu.pics/sfw/waifu`);
				const img = res.data.url;

				const form = {
					body: `${senderName} sent a waifu just for you ЁЯТЦ`,
					attachment: await global.utils.getStreamFromURL(img)
				};
				message.reply(form);
			} catch (e) {
				message.reply(`ЁЯе║ Couldn't fetch waifu.`);
			}
			return;
		}

		// тЬЕ ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐ ржЕржирзБржпрж╛рзЯрзА ржоржЬрж╛рж░ ржЯрзЗржХрзНрж╕ржЯ
		const messages = {
			slap: `${senderName} ржерж╛ржкрзНржкрзЬ ржорзЗрж░рзЗ ржЪрзБржк ржХрж░рж┐рзЯрзЗ ржжрж┐рж▓рзЛ ${targetTag} ржХрзЗ! ЁЯШ╡тАНЁЯТл`,
			hug: `${senderName} ржнрж╛рж▓ржмрж╛рж╕рж╛ ржжрж┐рзЯрзЗ ржЬрзЬрж┐рзЯрзЗ ржзрж░рж▓рзЛ ${targetTag} ржХрзЗ ЁЯдЧ`,
			kick: `${senderName} рж▓рж╛рждрзНржерж┐ ржорзЗрж░рзЗ ржЙржЧрж╛ржирзНржбрж╛рзЯ ржкрж╛ржарж╛рж▓рзЛ ${targetTag} ржХрзЗ ЁЯШВ`,
			cuddle: `${senderName} ${targetTag} ржХрзЗ ржорж┐рж╖рзНржЯрж┐ ржХрж░рзЗ ржЬрзЬрж┐рзЯрзЗ ржзрж░рж▓рзЛ ЁЯе░`,
			pat: `${senderName} ${targetTag} ржПрж░ ржорж╛ржерж╛рзЯ рж╣рж╛ржд ржмрзБрж▓рж┐рзЯрзЗ ржжрж┐рж▓рзЛ ЁЯШЗ`,
			bonk: `${senderName} ${targetTag} ржПрж░ ржорж╛ржерж╛рзЯ ржмржБржЯржХрж╛ ржорж╛рж░рж▓рзЛ! ЁЯдХ`,
			yeet: `${senderName} ${targetTag} ржХрзЗ ржЖржХрж╛рж╢рзЗ ржЫрзБрзЬрзЗ ржжрж┐рж▓рзЛ! ЁЯкВ`,
			kiss: `${senderName} ${targetTag} ржХрзЗ ржЖржжрж░ ржХрж░рзЗ ржХрж┐рж╕ ржжрж┐рж▓рзЛ ЁЯШШ`,
			kill: `${senderName} ржЪрзБржкрж┐ржЪрзБржкрж┐ ${targetTag} ржХрзЗ рж╢рзЗрж╖ ржХрж░рзЗ ржжрж┐рж▓рзЛ тШая╕П`,
			happy: `${senderName} ржЖржиржирзНржжрзЗ ${targetTag} ржПрж░ рж╕рж╛ржерзЗ ржирж╛ржЪржЫрзЗ! ЁЯе│`,
			poke: `${senderName} ржХрж┐ржЙржЯржнрж╛ржмрзЗ ржЦрзЛржБржЪрж╛ ржжрж┐рж▓рзЛ ${targetTag} ржХрзЗ ЁЯСЙ`,
			blush: `${senderName} ${targetTag} ржХрзЗ ржжрзЗржЦрзЗ рж▓ржЬрзНржЬрж╛рзЯ рж▓рж╛рж▓ рж╣рзЯрзЗ ржЧрзЗрж▓рзЛ ЁЯШ│`,
			dance: `${senderName} ${targetTag} ржПрж░ рж╕рж╛ржерзЗ ржирж╛ржЪрждрзЗ рж╢рзБрж░рзБ ржХрж░рж▓рзЛ ЁЯТГЁЯХ║`,
			cry: `${senderName} ${targetTag} ржПрж░ ржХрж╛ржБржзрзЗ ржорж╛ржерж╛ рж░рзЗржЦрзЗ ржХрж╛ржБржжржЫрзЗ ЁЯШв`
		};

		const fallbackText = `${senderName} ${category} ржХрж░рж▓рзЛ ${targetTag || "ржирж┐ржЬрзЗржЗ"} ржХрзЗ ЁЯФе`;

		// тЬЕ API ржХрж▓ ржПржмржВ рж░рзЗрж╕ржкржирзНрж╕
		try {
			const res = await axios.get(`https://api.waifu.pics/sfw/${category}`);
			const img = res.data.url;

			const form = {
				body: messages[category] || fallbackText,
				mentions: targetID ? [{ tag: targetTag, id: targetID }] : [],
				attachment: await global.utils.getStreamFromURL(img)
			};

			message.reply(form);
		} catch (e) {
			message.reply(`ЁЯе║ Category "${category}" ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ ржмрж╛ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗред

тЬЕ Available categories:
waifu, neko, slap, hug, kick, cuddle, pat, bonk, yeet, kiss, kill, happy, poke, blush, dance, cry`);
		}
	}
};
